{
	"Context ReactJS Template": {
		"prefix": "context-react",
		"body": [
			"import React, { createContext, useState, useContext } from 'react';",
			"",
			"const ${TM_FILENAME/(.*)\\..+$/${1}/}Context = createContext();",
			"",
			"export default function ${TM_FILENAME/(.*)\\..+$/${1}/}Provider({ children }) {",
			"    const [${TM_FILENAME/(.*)\\..+$/${1:/downcase}/}Context, set${TM_FILENAME/(.*)\\..+$/$1/}Context] = useState($0);",
			"",
			"    return(",
			"        <${TM_FILENAME/(.*)\\..+$/${1}/}Context.Provider value = {{${TM_FILENAME/(.*)\\..+$/${1:/downcase}/}Context, set${TM_FILENAME/(.*)\\..+$/$1/}Context}}>",
			"            { children }",
			"        </${TM_FILENAME/(.*)\\..+$/${1}/}Context.Provider>",
			"     );",
			"}",
			"",
			"export function use${TM_FILENAME/(.*)\\..+$/$1/}Context() {",
			"    const context = useContext(${TM_FILENAME/(.*)\\..+$/${1}/}Context);",
			"    if (!context) throw new Error('use${TM_FILENAME/(.*)\\..+$/$1/}Context must be used within a ${TM_FILENAME/(.*)\\..+$/${1:/downcase}/}Provider');",
			"    const { ${TM_FILENAME/(.*)\\..+$/${1:/downcase}/}Context, set${TM_FILENAME/(.*)\\..+$/$1/}Context } = context;",
			"    return { ${TM_FILENAME/(.*)\\..+$/${1:/downcase}/}Context, set${TM_FILENAME/(.*)\\..+$/$1/}Context };",
			"}"
		],
		"description": "Insert a Context ReactJS Template"
	}
	
}
